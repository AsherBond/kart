# syntax = docker/dockerfile:experimental
# Need to build this using: `DOCKER_BUILDKIT=1 docker build ...`
FROM python:3.7-stretch

RUN rm -f /etc/apt/apt.conf.d/docker-clean \
    && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
COPY requirements/*.apt /etc/
RUN --mount=type=cache,id=aptc1,target=/var/cache/apt --mount=type=cache,id=aptv1,target=/var/lib/apt \
    apt-get update -q \
    && DEBIAN_FRONTEND=noninteractive apt-get upgrade -q -y \
    && DEBIAN_FRONTEND=noninteractive apt-get install -q -y --no-install-recommends \
        dirmngr \
        gnupg2 \
    && /bin/bash -c "DEBIAN_FRONTEND=noninteractive xargs -a <(awk '/^\s*[^#]/' /etc/*.apt) -r -- apt-get install -q -y --no-install-recommends"

ENV TINI_VERSION v0.18.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/local/bin/tini
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /usr/local/share/tini.asc
RUN mkdir ~/.gnupg \
    && echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf \
    && gpg --batch --keyserver hkp://keyserver.ubuntu.com --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \
    && gpg --batch --verify /usr/local/share/tini.asc /usr/local/bin/tini \
    && chmod +x /usr/local/bin/tini

ENTRYPOINT ["/usr/local/bin/tini", "--"]
CMD ["sno"]

ENV VIRTUAL_ENV=/venv
ENV PATH=/venv/bin:$PATH
ENV CCACHE_DIR=/root/.cache/ccache

COPY . /src
WORKDIR /src

RUN --mount=type=cache,target=/root/.cache \
    make cleaner \
    && make --debug all || true
